---

name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:

  ############################################################################
  ## Build Docker Builder Image

  build-docker-builder:
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Build Docker Builder Image
        uses: docker/build-push-action@v3.1.0
        with:
          file: docker/builder.dockerfile
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

  ############################################################################
  ## Build Website

  build-website:
    runs-on: ubuntu-latest
    needs: build-docker-builder

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Load Docker Builder Image
        uses: docker/build-push-action@v3.1.0
        with:
          file: docker/builder.dockerfile
          context: .
          load: true
          tags: builder
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Website
        run: |
          make website@docker DOCKER_BUILDER_TAG=builder

      - name: Upload Website as Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: website
          path: _build/website

  ############################################################################
  ## Build Documentation

  build-documentation:
    runs-on: ubuntu-latest
    needs: build-website
    ## ^^^ not true but makes for better graphs

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Install JSON Schema Documentation Generator
        run: |
          pip install json-schema-for-humans==0.41.3

      - name: Generate Documentation for Schemas
        run: |
          mkdir -p _build/doc/schema
          generate-schema-doc 'database/_schema/*.yaml' _build/doc/schema

      - name: Upload Documentation as Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: documentation
          path: _build/doc

  ############################################################################
  ## Publish Website

  publish-website:
    runs-on: ubuntu-latest
    needs: build-website

    if: ${{ github.ref == 'refs/heads/main' }}

    steps:

      - name: Download Website from Artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          name: website
          path: ./website

      - name: Publish Website to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          ## Publish `./website` with following commit message...
          publish_dir: ./website
          full_commit_message: |
            Bump to ${{ github.sha }}: ${{ github.event.head.message }}
          ## ...to branch `pages` with the right access token...
          publish_branch: pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ## ...as the GitHub Actions bot...
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          ## ...serving `scd.niols.fr`.
          cname: scd.niols.fr

  ############################################################################
  ## Publish Dev Website

  publish-dev-website:
    runs-on: ubuntu-latest
    needs:
      - build-website
      - build-documentation

    steps:

      - name: Download Website from Artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          name: website
          path: ./website

      - name: Download Documentation from Artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          name: documentation
          path: ./website/_doc/

      - name: Prepare Metadata for Publishing the Dev Website
        run: |
          if [ -n "$GITHUB_HEAD_REF" ]; then
            ## If it is a pull request...
            pr=${GITHUB_REF_NAME%/merge}
            dir=pr/$pr
            ptr="$GITHUB_REPOSITORY#$pr"
          else
            ## Otherwise, if it is a branch or a tag...
            dir=$GITHUB_REF_TYPE/$GITHUB_REF_NAME
            ptr="$GITHUB_REPOSITORY@$GITHUB_SHA"
          fi
          ## In any case, similar messages:
          msg="Bump \`$dir\` to follow $ptr"
          echo "destination_dir=$dir" >> $GITHUB_ENV
          echo "commit_message=$msg" >> $GITHUB_ENV

      - name: Publish Dev Website to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          ## Publish `./website` with following commit message...
          publish_dir: ./website
          full_commit_message: ${{ env.commit_message }}
          ## ...to https://github.com/Niols/dev.scd.niols.fr on branch `pages`
          ## with the right access token...
          external_repository: niols/dev.scd.niols.fr
          publish_branch: pages
          personal_token: ${{ secrets.DEV_PAGES_TOKEN }}
          ## ...as the GitHub Actions bot...
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          ## ...in its own sub-directory while keeping the rest intact...
          destination_dir: ${{ env.destination_dir }}
          keep_files: true
          ## ...serving `dev.scd.niols.fr`.
          cname: dev.scd.niols.fr

  ############################################################################
  ## Publish Docker Builder

  publish-docker-builder:
    runs-on: ubuntu-latest
    needs: build-docker-builder

    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Authenticate to the GitHub Package Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Docker Builder Image
        uses: docker/build-push-action@v3.1.0
        with:
          file: docker/builder.dockerfile
          context: .
          push: true
          tags: ghcr.io/niols/scd.niols.fr-builder
          cache-from: type=gha
          cache-to: type=gha,mode=max

  ############################################################################
  ## Check all

  check-build-and-publish:
    runs-on: ubuntu-latest
    needs:
      - build-docker-builder
      - build-website
      - build-documentation
      - publish-docker-builder
      - publish-website
      - publish-dev-website

    ## Run only if no dependency failed. We allow them to have been skipped.
    if: ${{ failure() != true }}

    steps:
      - name: Everything was Successful!
        run: true
