---
name: Build and test

## YOUPI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  ############################################################################
  ## Setup Dependencies

  setup-dependencies:
    name: Setup dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/composites/setup-nix
        with:
          githubAccessToken: ${{ secrets.GITHUB_TOKEN }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build the environment
        run: nix develop --accept-flake-config --command true

  ############################################################################
  ## Build Website

  build-website:
    name: Build the website
    runs-on: ubuntu-latest
    needs: setup-dependencies

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/composites/setup-nix
        with:
          githubAccessToken: ${{ secrets.GITHUB_TOKEN }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build the website
        run: nix develop --accept-flake-config --command make website

      - name: Upload the website as artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: website
          path: _build/website

  ############################################################################
  ## Build Documentation

  build-documentation:
    name: Build the documentation
    runs-on: ubuntu-latest

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Install the JSON schema documentation generator
        run: |
          pip install json-schema-for-humans==0.41.3

      - name: Generate the documentation for schemas
        run: |
          mkdir -p _build/doc/schema
          generate-schema-doc 'database/_schema/*.yaml' _build/doc/schema

      - name: Upload the documentation as artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: documentation
          path: _build/doc

  ############################################################################
  ## Test Schemas

  test-schemas:
    name: Test the schemas
    runs-on: ubuntu-latest

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Install YAML to JSON converter and JSON schema validator
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.25.3/yq_linux_386 -qO yq
          chmod +x yq
          pip install jsonschema==4.7.2

      - name: Convert all schemas and database to JSON
        run: |
          find database -name '*.yaml' | while read file; do
            printf 'Converting `%s`.\n' "$file"
            ./yq --output-format json "$file" > "${file%.yaml}".json
          done

      - name: Run JSON validator for all schemas on the database
        run: |
          for type in dance tune book; do
            for file in database/$type/*.json; do
              jsonschema --output pretty --instance "$file" database/_schema/$type.json
            done
          done

  ############################################################################
  ## Test Website

  test-website:
    name: Test the website
    runs-on: ubuntu-latest
    needs: setup-dependencies

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/composites/setup-nix
        with:
          githubAccessToken: ${{ secrets.GITHUB_TOKEN }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build the test website
        run: nix develop --accept-flake-config --command make test-website

      - name: Run the tests
        run: nix develop --accept-flake-config --command make tests

      - name: Upload the test results as artifact
        if: ${{ always() }}
        ## NOTE: The tests are productive even when they fail. Therefore, it
        ## can be useful to upload the archive no matter what. In worst case,
        ## it will be empty.
        uses: actions/upload-artifact@v4.4.0
        with:
          name: tests
          path: _build/tests

  ############################################################################
  ## Run Flake Checks

  test-flake-checks:
    name: Run the flake checks
    runs-on: ubuntu-latest
    needs: setup-dependencies

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/composites/setup-nix
        with:
          githubAccessToken: ${{ secrets.GITHUB_TOKEN }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Run the flake checks
        run: nix flake check --print-build-logs --accept-flake-config
