---
name: Publish

on:
  workflow_run:
    workflows: [Build and test]
    types: [completed]

## We specify a concurrency group that spans over all publications, so as to
## avoid different runs clashing together.
concurrency:
  group: publish

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo actor: ${{ github.event.workflow_run.actor }}
          echo artifacts_url: ${{ github.event.workflow_run.artifacts_url }}
          echo cancel_url: ${{ github.event.workflow_run.cancel_url }}
          echo check_suite_id: ${{ github.event.workflow_run.check_suite_id }}
          echo check_suite_node_id: ${{ github.event.workflow_run.check_suite_node_id }}
          echo check_suite_url: ${{ github.event.workflow_run.check_suite_url }}
          echo conclusion: ${{ github.event.workflow_run.conclusion }}
          echo created_at: ${{ github.event.workflow_run.created_at }}
          echo event: ${{ github.event.workflow_run.event }}
          echo head_branch: ${{ github.event.workflow_run.head_branch }}
          echo head_commit: ${{ github.event.workflow_run.head_commit }}
          echo head_repository: ${{ github.event.workflow_run.head_repository }}
          echo head_sha: ${{ github.event.workflow_run.head_sha }}
          echo html_url: ${{ github.event.workflow_run.html_url }}
          echo id: ${{ github.event.workflow_run.id }}
          echo jobs_url: ${{ github.event.workflow_run.jobs_url }}
          echo logs_url: ${{ github.event.workflow_run.logs_url }}
          echo name: ${{ github.event.workflow_run.name }}
          echo node_id: ${{ github.event.workflow_run.node_id }}
          echo path: ${{ github.event.workflow_run.path }}
          echo previous_attempt_url: ${{ github.event.workflow_run.previous_attempt_url }}
          echo pull_requests: ${{ github.event.workflow_run.pull_requests }}
          echo referenced_workflows: ${{ github.event.workflow_run.referenced_workflows }}
          echo repository: ${{ github.event.workflow_run.repository }}
          echo rerun_url: ${{ github.event.workflow_run.rerun_url }}
          echo run_attempt: ${{ github.event.workflow_run.run_attempt }}
          echo run_number: ${{ github.event.workflow_run.run_number }}
          echo run_started_at: ${{ github.event.workflow_run.run_started_at }}
          echo status: ${{ github.event.workflow_run.status }}
          echo triggering_actor: ${{ github.event.workflow_run.triggering_actor }}
          echo updated_at: ${{ github.event.workflow_run.updated_at }}
          echo url: ${{ github.event.workflow_run.url }}
          echo workflow_id: ${{ github.event.workflow_run.workflow_id }}
          echo workflow_url: ${{ github.event.workflow_run.workflow_url }}
          echo display_title: ${{ github.event.workflow_run.display_title }}

          echo ref ${{ github.ref }}
          echo sha ${{ github.sha }}
          echo msg ${{ github.event.head_commit.message }}

          echo
          echo

          env

          echo
          echo

          if [ -n "$GITHUB_HEAD_REF" ]; then
            ## If it is a pull request...
            pr=${GITHUB_REF_NAME%/merge}
            dir=pr/$pr
            ptr="$GITHUB_REPOSITORY#$pr"
          else
            ## Otherwise, if it is a branch or a tag...
            dir=$GITHUB_REF_TYPE/$GITHUB_REF_NAME
            ptr="$GITHUB_REPOSITORY@$GITHUB_SHA"
          fi
          ## In any case, similar messages:
          msg="Bump \`$dir\` to follow $ptr"
          echo "destination_dir=$dir"
          echo "commit_message=$msg"

  ############################################################################
  ## Publish Website

  publish-website:
    name: Publish the website
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.event == 'push'
      && github.event.workflow_run.head_branch = 'main' }}

    steps:
      - name: Download Website from Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: website
          path: ./website
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Publish Website to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          ## Publish `./website` with following commit message...
          publish_dir: ./website
          full_commit_message: |
            Bump to ${{ github.sha }}: ${{ github.event.head_commit.message }}
          ## ...to branch `pages` with the right access token...
          publish_branch: pages
          github_token: ${{ secrets.PAGES_TOKEN }}
          ## ...as the GitHub Actions bot...
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          ## ...serving `scd.niols.fr`.
          cname: scd.niols.fr

  ############################################################################
  ## Publish Dev Website

  publish-dev-website:
    name: Publish the development website
    runs-on: ubuntu-latest

    ## NOTE: We publish even if one of the previous steps failed; hopefully,
    ## publishing it will then give more debug information. We do not do the
    ## same for the actual website.
    if: always()

    steps:
      - run: ls -lah

      - name: Download all artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - run: ls -lah

      # - name: Create website root even if building the website failed
      #   run: mkdir -p ./website

      # - name: Download documentation from artifacts
      #   if: needs.build-documentation.result == 'success'
      #   uses: actions/download-artifact@v4.1.8
      #   with:
      #     name: documentation
      #     path: ./website/_doc/
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     run-id: ${{ github.event.workflow_run.id }}

      # - name: Download tests from artifacts
      #   ## NOTE: No need to check for success, because the tests upload their
      #   ## archive no matter what happens.
      #   uses: actions/download-artifact@v4.1.8
      #   with:
      #     name: tests
      #     path: ./website/_tests/
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     run-id: ${{ github.event.workflow_run.id }}

      - name: Prepare metadata for publishing the development website
        run: |
          case ${{ github.event.workflow_run.event }} in
            pull_request)
              ## If it is a pull request...
              pr=${GITHUB_REF_NAME%/merge}
              dir=pr/$pr
              ptr="$GITHUB_REPOSITORY#$pr"
              ;;
            push)
              ## If it is a push of a branch...
              dir=branch/${{ github.event.workflow_run.head_branch }}
              ptr="$GITHUB_REPOSITORY@${{ github.event.workflow_run.head_sha }}"
              ;;
            *)
              echo Unexpected event type.
              exit 2
          fi
          ## In any case, similar messages:
          msg="Bump \`$dir\` to follow $ptr"
          echo "destination_dir=$dir"
          echo "commit_message=$msg"
          echo "destination_dir=$dir" >> $GITHUB_ENV
          echo "commit_message=$msg" >> $GITHUB_ENV

      # - name: Publish development website to GitHub pages
      #   uses: peaceiris/actions-gh-pages@v4.0.0
      #   with:
      #     ## Publish `./website` with following commit message...
      #     publish_dir: ./website
      #     full_commit_message: ${{ env.commit_message }}
      #     ## ...to https://github.com/Niols/dev.scd.niols.fr on branch `pages`
      #     ## with the right access token...
      #     external_repository: niols/dev.scd.niols.fr
      #     publish_branch: pages
      #     deploy_key: ${{ secrets.DEV_PAGES_KEY }}
      #     ## ...as the GitHub Actions bot...
      #     user_name: "github-actions[bot]"
      #     user_email: "github-actions[bot]@users.noreply.github.com"
      #     ## ...in its own sub-directory while keeping the rest intact...
      #     destination_dir: ${{ env.destination_dir }}
      #     keep_files: true
      #     ## ...serving `dev.scd.niols.fr`.
      #     cname: dev.scd.niols.fr
